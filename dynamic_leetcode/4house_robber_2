https://leetcode.com/problems/house-robber-ii/


class Solution {
public:
    int rob(vector<int>& nums) {
        int n=nums.size();
        if(n==1) return nums[0];
        vector<int> v1(nums.begin()+1,nums.end());
        vector<int> v2(nums.begin(),nums.end()-1);
        return max(ans(v1),ans(v2));
    }
    int ans(vector<int> nums)
    {
        int n = nums.size();
        if(n==1)
            return nums[0];
        vector<int> dp(n, 0);
        dp[0] = nums[0];
        dp[1] = max(nums[1], nums[0]);
        for(int i=2;i<n;i++)
        {
            dp[i] = max(nums[i]+dp[i-2], dp[i-1]);
        }
        return dp[n-1];
    }
};